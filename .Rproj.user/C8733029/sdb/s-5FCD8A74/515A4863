{
    "contents" : "#' Including libraries\nlibrary(car)\nlibrary(MASS)\nlibrary(knitr)\nlibrary(psych)\n\n#' Initializing variables\nmu <- c(1, 2)\nrho <- c(-.5, 0, .5)\nsigma1 <- sqrt(1);\nsigma2 <- sqrt(4);\nprobability <- .95\n\nprint(mu)\nprint(probability)\n\ncount <- 0\nfor (correlation in rho) {\n  count <- count + 1\n  print(paste(\"correlation: \", correlation))\n  \n  # Calculating the covariance matrix\n  covariance <- correlation*sigma1*sigma2 # elements (1,2) and (2,1) in covariance matrix Sigma\n  Sigma <- matrix(c(1, covariance, covariance, 4), 2, 2)\n  \n  # Generating samples ~N(mu, Sigma)\n  sample <- mvrnorm(n=100, mu, Sigma)\n    \n  #Getting mean and covariance matrix for new sample\n  smean <- apply(sample, 2, mean)\n  scov <- cov(sample)\n  \n  print(\"Sample mean:\")\n  print(smean)\n  print(\"Sample covariance matrix:\")\n  print(scov)\n  \n  variance <- apply(sample, 2, var)\n  print(\"Variance: \");\n  print(variance);\n  \n  # Descriptive statistics\n  dstat <- describe(sample)\n  print(dstat)\n  \n  # Getting the limits of the plot\n  xmax <- max(sample[, 1])\n  ymax <- max(sample[, 2])\n  xmin <- min(sample[, 1])\n  ymin <- min(sample[, 2])\n  \n  # Visualizing sample on plot with two ellipses: expected and observed\n  plot(sample, sub=paste(\"Sample \", count, \", correlation=\", correlation),\n       xlab=\"x\", ylab=\"y\",\n       xlim=c(xmin - 1, xmax + 1), ylim=c(ymin - 1, ymax + 1),\n       pch=21, col='blue', bg='lightblue')\n  ellipse(smean, scov, sqrt(qchisq(probability,2)))\n  ellipse(mu, Sigma, \n          sqrt(qchisq(probability, 2)), col=3, lty=2)  \n}",
    "created" : 1382302637013.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "409283139",
    "id" : "515A4863",
    "lastKnownWriteTime" : 1382342145,
    "path" : "~/GitHub/MSA/lab01/lab0102.R",
    "properties" : {
        "notebook_author" : "Paulau Aliaksandr",
        "notebook_title" : "Lab 1, Task 2",
        "notebook_type" : "spin"
    },
    "source_on_save" : true,
    "type" : "r_source"
}